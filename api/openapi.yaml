openapi: 3.0.3
info:
  title: Users API
  description: "API to manage users"
  version: 1.0.0
  license:
    name: Apache License 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  contact:
    name: slamdev
    url: https://github.com/slamdev/golang-http-service
servers:
  - url: '/api'
paths:
  /users/v1:
    get:
      description: Returns a list of users.
      operationId: getUsers
      responses:
        '200':
          description: List of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserV1'
    post:
      summary: Creates a new user.
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserV1'
      responses:
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/badRequest'
  /users/v1/{userid}:
    parameters:
      - in: path
        name: userid
        description: User Id
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
    get:
      description: Returns a user by id.
      operationId: getUser
      responses:
        '200':
          description: User.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserV1'
        '404':
           $ref: '#/components/responses/notFound'
components:
  schemas:
    UserV1:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int32
          minimum: 0
          x-oapi-codegen-extra-tags:
            validate: min=0
        name:
          type: string
          minLength: 1
          x-oapi-codegen-extra-tags:
            validate: min=1
    ProblemDetail:
      type: object
      required:
        - title
        - status
        - detail
        - instance
        - type
        - traceId
      properties:
        title:
          type: string
          minLength: 1
          description: Error title
          example: Bad Request
        status:
          type: integer
          minimum: 1
          description: Error status code
          example: 400
        detail:
          type: string
          minLength: 1
          description: Error details
          example: Validation failed
          x-go-type: error
        instance:
          type: string
          minLength: 1
          description: Request path
          example: /api/users/v1
        traceId:
          type: string
          minLength: 1
          description: Unique ID of this request
        type:
          type: string
          minLength: 1
          description: Error type
  responses:
    badRequest:
      description: Bad request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
    notFound:
      description: Not found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
